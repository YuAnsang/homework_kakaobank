plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'maven-publish'
}

group = 'com.github.asyu'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.9.0'

    implementation 'org.redisson:redisson-spring-boot-starter:3.22.1'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            url 'https://maven.pkg.github.com/YuAnsang/20230705_2126-000131'
            name = 'homework-packages'
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USER_NAME")
                password = project.findProperty("gpr.key") ?: System.getenv("ACCESS_TOKEN")
            }
        }
    }

    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}